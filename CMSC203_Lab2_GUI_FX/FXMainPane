


import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.control.Tooltip;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;

/**
 * This panel is the basic panel, inside which other panels are placed.  
 * Before beginning to implement, design the structure of your GUI in order to 
 * understand what panels go inside which ones, and what buttons or other components
 * go in which panels.  
 * @author ralexander
 *
 */
//make the main panel's layout be a VBox
public class FXMainPane extends VBox {

	//student Task #2:
	//  declare five buttons, a label, and a textfield
	//  declare two HBoxes
	
	private Button btnHello;
	private Button btnHowdy;
	private Button btnChinese;
	private Button btnClear;
	private Button btnExit;
	
	private Label Lfeedback;
	
	private TextField txtField;
	
	private HBox hbox1;
	private HBox hbox2;
	
	//student Task #4:
	//  declare an instance of DataManager
	private DataManager manager;
	/**
	 * The MainPanel constructor sets up the entire GUI in this approach.  Remember to
	 * wait to add a component to its containing component until the container has
	 * been created.  This is the only constraint on the order in which the following 
	 * statements appear.
	 */
	FXMainPane() {
		//student Task #2:
		//  instantiate the buttons, label, and textfield
		//  instantiate the HBoxes
		
		btnHello = new Button("Hello");
		btnHowdy = new Button("Howdy");
		btnChinese = new Button("Chinese");
		btnClear = new Button("Clear");
		btnExit = new Button("Exit");
		
		Lfeedback = new Label("Feedback");
		
		txtField = new TextField();
		
		hbox1 = new HBox();
		hbox2 = new HBox();
		
		//student Task #4:
		//  instantiate the DataManager instance
		//  set margins and set alignment of the components
		btnHello.setOnAction(new ButtonHandler());
		btnHowdy.setOnAction(new ButtonHandler());
		btnChinese.setOnAction(new ButtonHandler());
		btnClear.setOnAction(new ButtonHandler());
		btnExit.setOnAction(new ButtonHandler());
		
		
		Insets inset = new Insets(5,5,5,5);
		
		hbox1.setMargin(btnHello, inset);
		hbox1.setMargin(btnHowdy, inset);
		hbox1.setMargin(btnChinese, inset);
		hbox1.setMargin(btnClear, inset);
		hbox1.setMargin(btnExit, inset);
		
		hbox1.setAlignment(Pos.CENTER);
		
		hbox2.setMargin(Lfeedback, inset);
		hbox2.setMargin(txtField, inset);
		
		hbox2.setAlignment(Pos.CENTER);
			
		
		
		//student Task #3:
		//  add the label and textfield to one of the HBoxes
		//  add the buttons to the other HBox
		//  add the HBoxes to this FXMainPanel (a VBox)
		hbox1.getChildren().addAll(btnHello, btnHowdy,btnChinese,btnClear,btnExit);
		hbox2.getChildren().addAll(Lfeedback, txtField);
		getChildren().addAll(hbox1, hbox2);
		
	}
	
	//Task #4:
	//  create a private inner class to handle the button clicks
	private class ButtonHandler implements EventHandler<ActionEvent>{
		public void handle(ActionEvent event) {
			manager = new DataManager();
			String string = "";
			
			if (event.getTarget() == btnHello) {
				string = manager.getHello();	
			}
			else if (event.getTarget() == btnHowdy) {
				string = manager.getHowdy();
			}
			else if (event.getTarget() == btnChinese) {
				string = manager.getChinese();
			}
			else if (event.getTarget() == btnClear) {
				string = "";
			}
			else if (event.getTarget() == btnExit) {
				Platform.exit();
				System.exit(0);
			}
			txtField.setText(string);
		}
	}
}
	
